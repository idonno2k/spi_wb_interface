--lpm_mux CASCADE_CHAIN="MANUAL" DEVICE_FAMILY="Cyclone IV E" IGNORE_CASCADE_BUFFERS="OFF" LPM_PIPELINE=1 LPM_SIZE=2 LPM_WIDTH=27 LPM_WIDTHS=1 clock data result sel
--VERSION_BEGIN 23.1 cbx_lpm_mux 2023:11:29:19:36:37:SC cbx_mgl 2023:11:29:19:36:47:SC  VERSION_END


-- Copyright (C) 2023  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.



--synthesis_resources = reg 27 
SUBDESIGN mux_nqe
( 
	clock	:	input;
	data[53..0]	:	input;
	result[26..0]	:	output;
	sel[0..0]	:	input;
) 
VARIABLE 
	external_latency_ffsa[26..0] : dffe;
	result_node[26..0]	: WIRE;
	sel_node[0..0]	: WIRE;
	w_data103w[1..0]	: WIRE;
	w_data115w[1..0]	: WIRE;
	w_data127w[1..0]	: WIRE;
	w_data139w[1..0]	: WIRE;
	w_data151w[1..0]	: WIRE;
	w_data163w[1..0]	: WIRE;
	w_data175w[1..0]	: WIRE;
	w_data187w[1..0]	: WIRE;
	w_data199w[1..0]	: WIRE;
	w_data19w[1..0]	: WIRE;
	w_data211w[1..0]	: WIRE;
	w_data223w[1..0]	: WIRE;
	w_data235w[1..0]	: WIRE;
	w_data247w[1..0]	: WIRE;
	w_data259w[1..0]	: WIRE;
	w_data271w[1..0]	: WIRE;
	w_data283w[1..0]	: WIRE;
	w_data295w[1..0]	: WIRE;
	w_data307w[1..0]	: WIRE;
	w_data319w[1..0]	: WIRE;
	w_data31w[1..0]	: WIRE;
	w_data43w[1..0]	: WIRE;
	w_data55w[1..0]	: WIRE;
	w_data5w[1..0]	: WIRE;
	w_data67w[1..0]	: WIRE;
	w_data79w[1..0]	: WIRE;
	w_data91w[1..0]	: WIRE;

BEGIN 
	external_latency_ffsa[].clk = clock;
	external_latency_ffsa[].d = ( result_node[]);
	result[26..0] = external_latency_ffsa[26..0].q;
	result_node[] = ( ((sel_node[] & w_data319w[1..1]) # ((! sel_node[]) & w_data319w[0..0])), ((sel_node[] & w_data307w[1..1]) # ((! sel_node[]) & w_data307w[0..0])), ((sel_node[] & w_data295w[1..1]) # ((! sel_node[]) & w_data295w[0..0])), ((sel_node[] & w_data283w[1..1]) # ((! sel_node[]) & w_data283w[0..0])), ((sel_node[] & w_data271w[1..1]) # ((! sel_node[]) & w_data271w[0..0])), ((sel_node[] & w_data259w[1..1]) # ((! sel_node[]) & w_data259w[0..0])), ((sel_node[] & w_data247w[1..1]) # ((! sel_node[]) & w_data247w[0..0])), ((sel_node[] & w_data235w[1..1]) # ((! sel_node[]) & w_data235w[0..0])), ((sel_node[] & w_data223w[1..1]) # ((! sel_node[]) & w_data223w[0..0])), ((sel_node[] & w_data211w[1..1]) # ((! sel_node[]) & w_data211w[0..0])), ((sel_node[] & w_data199w[1..1]) # ((! sel_node[]) & w_data199w[0..0])), ((sel_node[] & w_data187w[1..1]) # ((! sel_node[]) & w_data187w[0..0])), ((sel_node[] & w_data175w[1..1]) # ((! sel_node[]) & w_data175w[0..0])), ((sel_node[] & w_data163w[1..1]) # ((! sel_node[]) & w_data163w[0..0])), ((sel_node[] & w_data151w[1..1]) # ((! sel_node[]) & w_data151w[0..0])), ((sel_node[] & w_data139w[1..1]) # ((! sel_node[]) & w_data139w[0..0])), ((sel_node[] & w_data127w[1..1]) # ((! sel_node[]) & w_data127w[0..0])), ((sel_node[] & w_data115w[1..1]) # ((! sel_node[]) & w_data115w[0..0])), ((sel_node[] & w_data103w[1..1]) # ((! sel_node[]) & w_data103w[0..0])), ((sel_node[] & w_data91w[1..1]) # ((! sel_node[]) & w_data91w[0..0])), ((sel_node[] & w_data79w[1..1]) # ((! sel_node[]) & w_data79w[0..0])), ((sel_node[] & w_data67w[1..1]) # ((! sel_node[]) & w_data67w[0..0])), ((sel_node[] & w_data55w[1..1]) # ((! sel_node[]) & w_data55w[0..0])), ((sel_node[] & w_data43w[1..1]) # ((! sel_node[]) & w_data43w[0..0])), ((sel_node[] & w_data31w[1..1]) # ((! sel_node[]) & w_data31w[0..0])), ((sel_node[] & w_data19w[1..1]) # ((! sel_node[]) & w_data19w[0..0])), ((sel_node[] & w_data5w[1..1]) # ((! sel_node[]) & w_data5w[0..0])));
	sel_node[] = ( sel[0..0]);
	w_data103w[] = ( data[35..35], data[8..8]);
	w_data115w[] = ( data[36..36], data[9..9]);
	w_data127w[] = ( data[37..37], data[10..10]);
	w_data139w[] = ( data[38..38], data[11..11]);
	w_data151w[] = ( data[39..39], data[12..12]);
	w_data163w[] = ( data[40..40], data[13..13]);
	w_data175w[] = ( data[41..41], data[14..14]);
	w_data187w[] = ( data[42..42], data[15..15]);
	w_data199w[] = ( data[43..43], data[16..16]);
	w_data19w[] = ( data[28..28], data[1..1]);
	w_data211w[] = ( data[44..44], data[17..17]);
	w_data223w[] = ( data[45..45], data[18..18]);
	w_data235w[] = ( data[46..46], data[19..19]);
	w_data247w[] = ( data[47..47], data[20..20]);
	w_data259w[] = ( data[48..48], data[21..21]);
	w_data271w[] = ( data[49..49], data[22..22]);
	w_data283w[] = ( data[50..50], data[23..23]);
	w_data295w[] = ( data[51..51], data[24..24]);
	w_data307w[] = ( data[52..52], data[25..25]);
	w_data319w[] = ( data[53..53], data[26..26]);
	w_data31w[] = ( data[29..29], data[2..2]);
	w_data43w[] = ( data[30..30], data[3..3]);
	w_data55w[] = ( data[31..31], data[4..4]);
	w_data5w[] = ( data[27..27], data[0..0]);
	w_data67w[] = ( data[32..32], data[5..5]);
	w_data79w[] = ( data[33..33], data[6..6]);
	w_data91w[] = ( data[34..34], data[7..7]);
END;
--VALID FILE
